#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "calendar_parser84.y".
#

require 'racc/parser'


module Composer

  module Parser

    class CalendarParser < Racc::Parser

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 2, 7, :_reduce_none,
 0, 8, :_reduce_none,
 2, 8, :_reduce_none,
 3, 9, :_reduce_4,
 1, 10, :_reduce_5,
 0, 11, :_reduce_none,
 1, 11, :_reduce_7,
 1, 12, :_reduce_8,
 2, 12, :_reduce_9 ]

racc_reduce_n = 10

racc_shift_n = 14

racc_action_table = [
     1,     4,     5,     8,    10,    12,    13 ]

racc_action_check = [
     0,     2,     3,     4,     7,     9,    11 ]

racc_action_pointer = [
    -3,   nil,     1,    -3,     3,   nil,   nil,     0,   nil,     3,
   nil,     4,   nil,   nil ]

racc_action_default = [
   -10,    -2,   -10,    -1,   -10,    -5,    -3,    -6,    14,   -10,
    -7,    -4,    -8,    -9 ]

racc_goto_table = [
     2,     3,     6,     7,     9,    11 ]

racc_goto_check = [
     1,     2,     3,     4,     5,     6 ]

racc_goto_pointer = [
   nil,     0,     0,    -1,     0,    -3,    -4 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :DATE8 => 2,
 :DECLARE => 3,
 :STRING => 4,
 :WORD => 5 }

racc_use_result_var = true

racc_nt_base = 6

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'DATE8',
'DECLARE',
'STRING',
'WORD',
'$start',
'cals',
'stmts',
'calendar',
'name',
'description',
'date']

Racc_debug_parser = true

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'calendar_parser84.y', 16
  def _reduce_4( val, _values, result )
										@logger.warn("#{self.class}"){ "CALENDAR is not set enough. [ #{@calendar.inspect} ]"} unless @calendar.set_enough?
										@logger.info("#{self.class}"){ "CALENDAR [ #{@calendar.name} ] was reduced." }
										@calendars.push @calendar
										@calendar=::Composer::TwsObj::Calendar.new
   result
  end
.,.,

module_eval <<'.,.,', 'calendar_parser84.y', 17
  def _reduce_5( val, _values, result )
 @calendar.name=val[0]
   result
  end
.,.,

 # reduce 6 omitted

module_eval <<'.,.,', 'calendar_parser84.y', 21
  def _reduce_7( val, _values, result )
 @calendar.description=val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'calendar_parser84.y', 24
  def _reduce_8( val, _values, result )
 @calendar.append_date val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'calendar_parser84.y', 26
  def _reduce_9( val, _values, result )
 @calendar.append_date val[1]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class CalendarParser

  end   # module Parser

end   # module Composer
